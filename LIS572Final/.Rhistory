data <- read.csv("..\GitHub Repo\LIS572Final\data\persondata.csv", quote = "", row.names = NULL, stringsAsFactors = FALSE)
data <- read.csv("..\LIS572Final\data\persondata.csv", quote = "", row.names = NULL, stringsAsFactors = FALSE)
data <- read.csv("..LIS572Final\data\persondata.csv", quote = "", row.names = NULL, stringsAsFactors = FALSE)
data <- read.csv("../LIS572Final/data/persondata.csv", quote = "", row.names = NULL, stringsAsFactors = FALSE)
data <- read.csv("../data/persondata.csv", quote = "", row.names = NULL, stringsAsFactors = FALSE)
data2 <- read.csv("../data/relationshipdata.csv", quote = "", row.names = NULL, stringsAsFactors = FALSE)
data <- data %>%
left_join(data2, by = c("source" = "Chinese")) %>%
mutate(pinyinsource = ifelse(!is.na(pinyin), pinyin, source))
library(dplyr)
library(stringr)
library(visNetwork)
library(igraph)
library(RColorBrewer)
library(tidyr)
data <- data %>%
left_join(data2, by = c("source" = "Chinese")) %>%
mutate(pinyinsource = ifelse(!is.na(pinyin), pinyin, source))
data <- read.csv("../data/persondata.csv", quote = "", row.names = NULL, stringsAsFactors = FALSE)
data2 <- read.csv("../data/relationshipdata.csv", quote = "", row.names = NULL, stringsAsFactors = FALSE) #For the purpose of the project, I have chosen to replace all the Chinese names in data with their corresponding pinyin names in data2, even if it makes more sense for the personality to have an Enlgish name
data <- data %>%
left_join(data2, by = c("source" = "Chinese")) %>%
mutate(pinyinsource = ifelse(!is.na(pinyin), pinyin, source))
data <- read.csv("../data/persondata.csv", quote = "", row.names = NULL, stringsAsFactors = FALSE)
data2 <- read.csv("../data/relationshipdata.csv", quote = "", row.names = NULL, stringsAsFactors = FALSE)
View(data2)
View(data2)
data <- data %>%
left_join(data2, by = c("source" = "Chinese")) %>%
mutate(pinyinsource = ifelse(!is.na(pinyin), pinyin, source))
rlang::last_trace()
View(data2)
colname(data)
View(data2)
View(data)
data2 <- read.csv("../data/persondata.csv", quote = "", row.names = NULL, stringsAsFactors = FALSE)
data <- read.csv("../data/relationshipdata.csv", quote = "", row.names = NULL, stringsAsFactors = FALSE)
data <- data %>%
left_join(data2, by = c("source" = "Chinese")) %>%
mutate(pinyinsource = ifelse(!is.na(pinyin), pinyin, source))
data <- data %>%
left_join(data2 %>%
rename(pinyin_target = pinyin), by = c("target" = "Chinese")) %>%
mutate(pinyintarget = ifelse(!is.na(pinyin_target), pinyin_target, target))
data <- data %>%
select(-source, -target, -pinyin, -pinyin_target)
visNetwork(nodes, edges, main = 'Singapore Chinese Personalities Database Social Network') %>%
visPhysics(stabilization = TRUE) %>%
visOptions(highlightNearest=TRUE,
nodesIdSelection=TRUE) %>%
visLegend(
enabled = TRUE,
addEdges = data.frame(
label = c("Blood related and couple", "Close friend","relative","friend", "acquaintance"),
color = c("darkred", "darkgreen", "pink", "lightgreen","darkgray")))%>%
visNodes(size = 5, color = list(highlight = "yellow"))
data <- data %>%
left_join(data2, by = c("source" = "Chinese")) %>%
mutate(pinyinsource = ifelse(!is.na(pinyin), pinyin, source))
View(data)
visNetwork(nodes, edges, main = 'Singapore Chinese Personalities Database Social Network') %>%
visPhysics(stabilization = TRUE) %>%
visOptions(highlightNearest=TRUE,
nodesIdSelection=TRUE) %>%
visLegend(
enabled = TRUE,
addEdges = data.frame(
label = c("Blood related and couple", "Close friend","relative","friend", "acquaintance"),
color = c("darkred", "darkgreen", "pink", "lightgreen","darkgray")))%>%
visNodes(size = 5, color = list(highlight = "yellow"))
nodes <- data.frame(unique(c(data$pinyinsource, data$pinyintarget)))
colnames(nodes) <- c("id")
nodes <- nodes %>% mutate(label = nodes$id) %>% distinct(id,label)
nodes$id <- nodes$label
edges <- data %>% select(pinyinsource, pinyintarget, relclas)
colnames(edges) <- c("from","to","label")
edges <- edges %>% mutate(color = label)
edges <- edges %>% mutate(color = str_replace_all(color, c("三代以内直系血亲及夫妻"= "darkred", "普通伙伴" = "green","普通亲戚" = "pink","轻度社交" = "lightgreen","密切伙伴"="darkgreen")))
edges <- edges %>% select(-label)
visNetwork(nodes, edges, main = 'Singapore Chinese Personalities Database Social Network') %>%
visPhysics(stabilization = TRUE) %>%
visOptions(highlightNearest=TRUE,
nodesIdSelection=TRUE) %>%
visLegend(
enabled = TRUE,
addEdges = data.frame(
label = c("Blood related and couple", "Close friend","relative","friend", "acquaintance"),
color = c("darkred", "darkgreen", "pink", "lightgreen","darkgray")))%>%
visNodes(size = 5, color = list(highlight = "yellow"))
visNetwork(nodes2, edges, main = 'Degree Centrality of Prominent Singapore Chinese Personalities') %>%
visOptions(highlightNearest=TRUE,
nodesIdSelection=TRUE, selectedBy="degree_rank") %>%
visPhysics(stabilization = TRUE) %>%
visLegend(
enabled = TRUE,
addEdges = data.frame(
label = c("Blood related and couple", "Close friend","relative","friend", "acquaintance"),
color = c("darkred", "darkgreen", "pink", "green","darkgray")))%>%
visNodes(color = list(highlight = "yellow"))
g <- graph_from_data_frame(d=edges, vertices=nodes, directed=FALSE)
g
degree_centrality <- degree(g)
nodes2 <- nodes
nodes2$degree_centrality <- degree_centrality[as.character(nodes2$id)]
head(sort(degree_centrality, decreasing=TRUE))
base_palette <- brewer.pal(9, "YlOrRd")
colors_centrality <- rev(colorRampPalette(base_palette)(705))
importance <- strength(g)
nodes2$importance <- importance
nodes2 <- nodes2 %>% mutate(degree_rank=706-floor(rank(degree_centrality)), color.background=colors_centrality[degree_rank], size=log((importance+3)^5))
visNetwork(nodes2, edges, main = 'Degree Centrality of Prominent Singapore Chinese Personalities') %>%
visOptions(highlightNearest=TRUE,
nodesIdSelection=TRUE, selectedBy="degree_rank") %>%
visPhysics(stabilization = TRUE) %>%
visLegend(
enabled = TRUE,
addEdges = data.frame(
label = c("Blood related and couple", "Close friend","relative","friend", "acquaintance"),
color = c("darkred", "darkgreen", "pink", "green","darkgray")))%>%
visNodes(color = list(highlight = "yellow"))
ors_centrality[degree_rank], size=log((importance+3)^5))
visNetwork(nodes2, edges, main = 'Degree Centrality of Prominent Singapore Chinese Personalities') %>%
visOptions(highlightNearest=TRUE,
nodesIdSelection=TRUE, selectedBy="degree_rank") %>%
visPhysics(stabilization = TRUE) %>%
visLegend(
enabled = TRUE,
addEdges = data.frame(
label = c("Blood related and couple", "Close friend","relative","friend", "acquaintance"),
color = c("darkred", "darkgreen", "pink", "green","darkgray")))%>%
visNodes(color = list(highlight = "yellow"))
top_nodes <- edges %>%
select(from, to) %>%
pivot_longer(cols = everything(),
values_to = "name",
names_to = NULL,
names_repair = "minimal") %>%
count(name, sort = TRUE) %>%
slice_max(n = 20, order_by = n)
filtered_nodes <- nodes %>%  filter(id %in% top_nodes$name|label %in% top_nodes$name)
filtered_edges <- edges %>%  filter(from %in% top_nodes$name|to %in% top_nodes$name)
visNetwork(filtered_nodes, filtered_edges, main = 'Top 20 Singapore Chinese Persoanlities Social Network') %>%
visPhysics(stabilization = TRUE) %>%
visOptions(highlightNearest=TRUE,
nodesIdSelection=TRUE) %>%
visLegend(
enabled = TRUE,
addEdges = data.frame(
label = c("Blood related and couple", "Close friend","relative","friend", "acquaintance"),
color = c("darkred", "darkgreen", "pink", "lightgreen","darkgray")))%>%
visNodes(size = 5, color = list(highlight = "yellow"))
View(g)
View(top_nodes)
